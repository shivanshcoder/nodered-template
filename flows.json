[
    {
        "id": "e34226b2e39fb0a2",
        "type": "tab",
        "label": "Examples",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7e22036e.f80bdc",
        "type": "tab",
        "label": "tests",
        "disabled": false,
        "info": ""
    },
    {
        "id": "88ab76e4d40e8a92",
        "type": "inject",
        "z": "7e22036e.f80bdc",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 280,
        "wires": [
            [
                "509551fd79d8b045"
            ]
        ]
    },
    {
        "id": "509551fd79d8b045",
        "type": "function",
        "z": "7e22036e.f80bdc",
        "name": "",
        "func": "const dbConnect = await global.get(\"express_mongodb\").getDb()\n\n// async function s(){\n\n// }\n\n// s()\nlet lambda_logs = (dbConnect.db(\"fintech\").collection(\"lambda_logs\"));\nlet res = await lambda_logs.insertOne({ \"111 \": \"1111 \" })\nmsg.payload = res;\nnode.send(msg);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 360,
        "wires": [
            [
                "f2c7a55424817c8f"
            ]
        ]
    },
    {
        "id": "f2c7a55424817c8f",
        "type": "debug",
        "z": "7e22036e.f80bdc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 400,
        "wires": []
    }
]